<Page
    x:Class="MALClient.Pages.AnimeListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MALClient.Pages"
    xmlns:item="using:MALClient.Items"
    xmlns:converters="using:MALClient.XamlConverters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding AnimeList , Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:DisplayModeToPresenterControlVisibility x:Key="DisplayModeToPresenterControlVisibility" />
        <converters:DivideValueConverter x:Key="DivideValueConverter" />
        <x:String x:Key="PivotPagesString">PivotPages</x:String>
        <x:String x:Key="IndefiniteListString">IndefiniteList</x:String>
        <x:String x:Key="IndefiniteGridString">IndefiniteGrid</x:String>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar x:Name="BottomCommandBar" Background="{ThemeResource BrushAppBars}">
            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Refresh" Label="Go back to my list" Command="{Binding GoBackToMyListCommand}"
                              Visibility="{Binding AppBtnGoBackToMyListVisibility}" />
                <AppBarButton
                    Visibility="{Binding AppBtnListSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Icon="Contact2" Label="List source">
                    <AppBarButton.Flyout>
                        <Flyout x:Name="FlyoutListSource" Opened="FlyoutListSource_OnOpened">
                            <StackPanel>
                                <TextBlock VerticalAlignment="Center" Text="MAL Username:" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBox x:Name="TxtListSource"
                                             Text="{Binding ListSource,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5,5" KeyDown="ListSource_OnKeyDown" />
                                    <Button Command="{Binding RefreshCommand}">
                                        <SymbolIcon Symbol="Accept" />
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Icon="Refresh" Label="Reload" Command="{Binding RefreshCommand}" />
            </CommandBar.SecondaryCommands>
            <AppBarButton Icon="View" Label="Display mode">
                <AppBarButton.Flyout>
                    <Flyout x:Name="ViewsFlyout">
                        <ListView ItemsSource="{Binding DisplayModes}"
                                  SelectedItem="{Binding CurrentlySelectedDisplayMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Height" Value="25" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Item2}" Height="25" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Calendar" Label="Select season"
                          Visibility="{Binding AppbarBtnPinTileVisibility}">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FlyoutSeasonSelection">
                        <ListView ItemsSource="{Binding SeasonSelection}" SelectionMode="Single"
                                  SelectedIndex="{Binding SeasonalUrlsSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Sort" Label="Order by" Visibility="{Binding AppBtnSortingVisibility}">
                <AppBarButton.Flyout>
                    <Flyout x:Name="SortingFlyout">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="ToggleMenuFlyoutItem">
                                    <Setter Property="Height" Value="46" />
                                </Style>
                            </StackPanel.Resources>
                            <StackPanel x:Name="SortToggles">
                                <ToggleMenuFlyoutItem x:Name="SortTitle" Text="Title" Click="SelectSortMode" />
                                <ToggleMenuFlyoutItem x:Name="SortScore" Text="Score" Click="SelectSortMode" />
                                <ToggleMenuFlyoutItem x:Name="Sort3" Text="{Binding Sort3Label}" Click="SelectSortMode" />
                                <ToggleMenuFlyoutItem x:Name="SortAiring" Text="Soonest airing" Click="SelectSortMode"
                                                      Visibility="{Binding SortAirDayVisibility}" />
                                <ToggleMenuFlyoutItem x:Name="SortNone" Text="None" Click="SelectSortMode" />
                            </StackPanel>
                            <MenuFlyoutSeparator />
                            <ToggleMenuFlyoutItem x:Name="BtnOrderDescending" Text="Decsending" Click="ChangeSortOrder" />
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Filter" Label="Filter">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FiltersFlyout">
                        <ListView
                            SelectedIndex="{Binding StatusSelectorSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            SelectionMode="Single">
                            <ListView.Items>
                                <ListViewItem Content="{Binding Filter1Label}" />
                                <ListViewItem Content="Completed" />
                                <ListViewItem Content="On hold" />
                                <ListViewItem Content="Dropped" />
                                <ListViewItem Content="{Binding Filter5Label}" />
                                <ListViewItem Content="{Binding StatusAllLabel}" />
                            </ListView.Items>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>
    <Grid Background="{ThemeResource BrushDeepBackground}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AnimesItemsIndefinite.ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="GridViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Padding" Value="5,5" />
                                    <Setter Property="Margin" Value="5,5" />
                                    <Setter Property="Width" Value="395"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                                    <Setter Property="BorderThickness" Value="2,0,2,0" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                    <VisualState.Storyboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnimesItemsIndefinite" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="Stretch"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnimesGridIndefinite" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="Stretch"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AnimesItemsIndefinite.ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="GridViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Padding" Value="5,5" />
                                    <Setter Property="Margin" Value="5,5" />
                                    <Setter Property="Width" Value="490"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                                    <Setter Property="BorderThickness" Value="2,0,2,0" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                    <VisualState.Storyboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnimesItemsIndefinite" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Stretch"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnimesGridIndefinite" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Stretch"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.Resources>
            <ResourceDictionary>
                <Style TargetType="PivotHeaderPanel">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="../XamlResources/DictionaryAnimeList.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>
        <Pivot x:Name="AnimesPivot"
               Style="{StaticResource PivotStyleAnimeList}"
               SelectionChanged="AnimesPivot_OnSelectionChanged"
               SelectedIndex="{Binding AnimesPivotSelectedIndex , Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}"
               ItemsSource="{Binding AnimePages}"
               PivotItemLoading="AnimesPivot_OnPivotItemLoading"
               VerticalAlignment="Stretch"
               Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource PivotPagesString}}">
            <Pivot.Resources>
                <Style TargetType="PivotHeaderItem" BasedOn="{StaticResource PivotHeaderItemAnimeList}" />
            </Pivot.Resources>
            <Pivot.ItemContainerStyle>
                <Style TargetType="PivotItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="1" />
                </Style>
            </Pivot.ItemContainerStyle>
            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <Grid Width="30" Height="30" Margin="2,0" VerticalAlignment="Top"
                          Visibility="{Binding ElementName=AnimesPivot , Path=DataContext.AnimesPivotHeaderVisibility}">
                        <TextBlock Text="{Binding}" FontSize="20" Foreground="White" FontWeight="SemiLight"
                                   VerticalAlignment="Top" HorizontalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Pivot.HeaderTemplate>
        </Pivot>
        <GridView x:Name="AnimesItemsIndefinite" ItemsSource="{Binding AnimeItems}" 
                  SelectionChanged="AnimesItemsIndefinite_OnSelectionChanged" HorizontalAlignment="Stretch"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteListString}}">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="5,5" />
                    <Setter Property="Margin" Value="5,5" />
                    <Setter Property="Width" Value="395"/>
                    <Setter Property="BorderBrush" Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                    <Setter Property="BorderThickness" Value="2,0,2,0" />
                </Style>
            </GridView.ItemContainerStyle>
        </GridView>
        <GridView x:Name="AnimesGridIndefinite" Margin="1" ItemsSource="{Binding AnimeGridItems}"
                  SelectionChanged="AnimesGridIndefinite_OnSelectionChanged" HorizontalAlignment="Stretch"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteGridString}}">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="Padding" Value="5,5" />
                    <Setter Property="Margin" Value="5,5" />
                    <Setter Property="Width" Value="200"/>
                </Style>
            </GridView.ItemContainerStyle>
        </GridView>
        <StackPanel Margin="{Binding ElementName=AnimesPivot, Path=Margin}" HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <TextBlock
                Visibility="{Binding EmptyNoticeVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                Text="{Binding EmptyNoticeContent}"
                TextWrapping="WrapWholeWords" TextAlignment="Center" Foreground="#FFB9B9B9" />
            <Button x:Name="BtnSetSource" Content="Set source" Margin="0,10,0,0" VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Visibility="{Binding BtnSetSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Click="ShowListSourceFlyout" />
        </StackPanel>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Visibility="{Binding Loading,Converter={StaticResource BoolToVisibilityConverter}}"
              Background="{ThemeResource BrushLoading}">
            <ProgressRing
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="150" Height="150"
                IsActive="True" />
        </Grid>
    </Grid>
</Page>